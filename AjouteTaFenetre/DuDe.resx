<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>